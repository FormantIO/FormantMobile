(function(){const U=document.createElement("link").relList;if(U&&U.supports&&U.supports("modulepreload"))return;for(const R of document.querySelectorAll('link[rel="modulepreload"]'))d(R);new MutationObserver(R=>{for(const J of R)if(J.type==="childList")for(const B of J.addedNodes)B.tagName==="LINK"&&B.rel==="modulepreload"&&d(B)}).observe(document,{childList:!0,subtree:!0});function F(R){const J={};return R.integrity&&(J.integrity=R.integrity),R.referrerPolicy&&(J.referrerPolicy=R.referrerPolicy),R.crossOrigin==="use-credentials"?J.credentials="include":R.crossOrigin==="anonymous"?J.credentials="omit":J.credentials="same-origin",J}function d(R){if(R.ep)return;R.ep=!0;const J=F(R);fetch(R.href,J)}})();var L=Object.defineProperty,y=(V,U,F)=>U in V?L(V,U,{enumerable:!0,configurable:!0,writable:!0,value:F}):V[U]=F,H=(V,U,F)=>(y(V,typeof U!="symbol"?U+"":U,F),F),s=Object.defineProperty,j=Object.defineProperties,I=Object.getOwnPropertyDescriptors,r=Object.getOwnPropertySymbols,K=Object.prototype.hasOwnProperty,u=Object.prototype.propertyIsEnumerable,Y=(V,U,F)=>U in V?s(V,U,{enumerable:!0,configurable:!0,writable:!0,value:F}):V[U]=F,n=(V,U)=>{for(var F in U||(U={}))K.call(U,F)&&Y(V,F,U[F]);if(r)for(var F of r(U))u.call(U,F)&&Y(V,F,U[F]);return V},D=(V,U)=>j(V,I(U)),Q=(V,U,F)=>(Y(V,typeof U!="symbol"?U+"":U,F),F);const g=1,z=1e3,i=60*z,w=60*i,t=24*w,f=7*t,P=30*t,q=365*t,k={millisecond:g,second:z,minute:i,hour:w,day:t,week:f,month:P,year:q};class v{constructor(U,F,d){Q(this,"worker"),Q(this,"onReceive"),Q(this,"onError"),Q(this,"onReceiveMessage",J=>{const{data:B}=J;if(B.error){const l=new Error(`${B.error}`);l.cause=B.error,console.warn("H264 worker failure",{error:l}),this.onError(B.index);return}this.onReceive(B)});var R;this.worker=U,(R=this.worker)==null||R.addEventListener("message",this.onReceiveMessage),this.onReceive=F,this.onError=d}post(U,F,d,R){var J;(J=this.worker)==null||J.postMessage({timestamp:U,encodedFrame:F,flags:d,index:R})}release(){var U,F;(U=this.worker)==null||U.removeEventListener("message",this.onReceiveMessage),(F=this.worker)==null||F.terminate(),this.worker=void 0}}class A{constructor(U){Q(this,"gl"),Q(this,"program"),Q(this,"texturePosBuffer"),Q(this,"textureRef"),Q(this,"height",0),Q(this,"width",0),this.gl=U,this.program=this.initProgram();const{texturePosBuffer:F}=this.initBuffers();this.texturePosBuffer=F;const{textureRef:d}=this.initTextures();this.textureRef=d}draw(U){const{gl:F,height:d,width:R,texturePosBuffer:J,textureRef:B}=this;F.viewport(0,0,R,d);const l=new Float32Array([1,0,0,0,1,1,0,1]);return F.bindBuffer(F.ARRAY_BUFFER,J),F.bufferData(F.ARRAY_BUFFER,l,F.DYNAMIC_DRAW),F.activeTexture(F.TEXTURE0),F.bindTexture(F.TEXTURE_2D,B),F.texImage2D(F.TEXTURE_2D,0,F.LUMINANCE,R,d+d/2,0,F.LUMINANCE,F.UNSIGNED_BYTE,U),F.drawArrays(F.TRIANGLE_STRIP,0,4),F.getError()}initProgram(){const{gl:U}=this,F=`
            attribute vec4 vertexPos;
            attribute vec4 texturePos;
            varying vec2 textureCoord;

            void main() {
                gl_Position = vertexPos;
                textureCoord = texturePos.xy;
            }
        `,d=`
            precision highp float;
            varying highp vec2 textureCoord;
            uniform sampler2D yuvSampler;
            uniform mat4 YUV2RGB;

            void main(void) {
                highp vec2 yScale = vec2(1.0, 2.0 / 3.0);
                highp vec2 yTextureCoord = textureCoord * yScale;

                highp vec2 uScale = vec2(0.5, 0.5 / 3.0);
                highp vec2 uOffset = vec2(0.0, 2.0 / 3.0);
                highp vec2 uTextureCoord = (textureCoord * uScale) +  uOffset;

                highp vec2 vScale = vec2(0.5, 0.5 / 3.0);
                highp vec2 vOffset = vec2(0.0, 2.5 / 3.0);
                highp vec2 vTextureCoord = (textureCoord * vScale) +  vOffset;

                highp float y = texture2D(yuvSampler, yTextureCoord).r;
                highp float u = texture2D(yuvSampler, uTextureCoord).r;
                highp float v = texture2D(yuvSampler, vTextureCoord).r;

                gl_FragColor = vec4(y, u, v, 1) * YUV2RGB;
            }
        `,R=[1.16438,0,1.59603,-.87079,1.16438,-.39176,-.81297,.52959,1.16438,2.01723,0,-1.08139,0,0,0,1],J=U.createShader(U.VERTEX_SHADER);if(!J)throw new Error("Failed to create vertex shader");U.shaderSource(J,F),U.compileShader(J);const B=U.createShader(U.FRAGMENT_SHADER);if(!B)throw new Error("Failed to create fragment shader");U.shaderSource(B,d),U.compileShader(B);const l=U.createProgram();if(!l)throw new Error("Failed to create webgl program");U.attachShader(l,J),U.attachShader(l,B),U.linkProgram(l),U.useProgram(l);const N=U.getUniformLocation(l,"YUV2RGB");return U.uniformMatrix4fv(N,!1,R),l}initBuffers(){const{gl:U,program:F}=this,d=U.createBuffer();U.bindBuffer(U.ARRAY_BUFFER,d),U.bufferData(U.ARRAY_BUFFER,new Float32Array([1,1,-1,1,1,-1,-1,-1]),U.STATIC_DRAW);const R=U.getAttribLocation(F,"vertexPos");U.enableVertexAttribArray(R),U.vertexAttribPointer(R,2,U.FLOAT,!1,0,0);const J=U.createBuffer();if(!J)throw new Error("Failed to create WebGL buffer");U.bindBuffer(U.ARRAY_BUFFER,J),U.bufferData(U.ARRAY_BUFFER,new Float32Array([1,0,0,0,1,1,0,1]),U.STATIC_DRAW);const B=U.getAttribLocation(F,"texturePos");return U.enableVertexAttribArray(B),U.vertexAttribPointer(B,2,U.FLOAT,!1,0,0),{texturePosBuffer:J}}initTextures(){const{gl:U,program:F}=this,d=this.initTexture(),R=U.getUniformLocation(F,"yuvSampler");return U.uniform1i(R,0),{textureRef:d}}initTexture(){const{gl:U}=this,F=U.createTexture();if(!F)throw new Error("Failed to initialize texture");return U.bindTexture(U.TEXTURE_2D,F),U.texParameteri(U.TEXTURE_2D,U.TEXTURE_MAG_FILTER,U.NEAREST),U.texParameteri(U.TEXTURE_2D,U.TEXTURE_MIN_FILTER,U.NEAREST),U.texParameteri(U.TEXTURE_2D,U.TEXTURE_WRAP_S,U.CLAMP_TO_EDGE),U.texParameteri(U.TEXTURE_2D,U.TEXTURE_WRAP_T,U.CLAMP_TO_EDGE),U.bindTexture(U.TEXTURE_2D,null),F}}const _=k.second*2.5,o=k.second/3,p=k.second*2,c=5,$=30/25,b=5,UU=1282;class FU{constructor(U,F,d,R,J){Q(this,"_waitingForDecoder",!0),Q(this,"_noSignal",!0),Q(this,"_lostSignal",!1),Q(this,"_overWaitingThreshold",!1),Q(this,"_retries",0),Q(this,"_webglYUVSupported"),Q(this,"lastDecodedFrameTime"),Q(this,"lastReceivedFrameTime"),Q(this,"lastNoSignalTime",new Date().getTime()),Q(this,"moduleStartTime",Date.now()),Q(this,"moduleCreateTime",Date.now()),Q(this,"timesRestarted",0),Q(this,"canvas"),Q(this,"decoder"),Q(this,"yuvCanvas"),Q(this,"webglContext"),Q(this,"frameQueue",[]),Q(this,"minFrameSize",1/0),Q(this,"maxFrameSize",0),Q(this,"decoderQueue",[]),Q(this,"decoderQueueLocked",!1),Q(this,"decodeNextFrameAttempted",!1),Q(this,"numFramesDecoded",0),Q(this,"numFramesReceived",0),Q(this,"hasReceivedKeyframe",!1),Q(this,"medianFrameSize",0),Q(this,"currentFrameIndex"),Q(this,"frameCheckpointMap",new Map),Q(this,"lastDrawnFrameTime"),Q(this,"minJitter"),Q(this,"maxJitter"),Q(this,"start",()=>{const{canvas:B}=this;if(!B)return;const l=B.getContext("webgl");this.webglContext=l||void 0,this.lastDecodedFrameTime=void 0,this.lastReceivedFrameTime=void 0,this.hasReceivedKeyframe=!1,this.currentFrameIndex=void 0,!(!this.canvas||!this.webglContext)&&(this.yuvCanvas||(this.yuvCanvas=new A(this.webglContext)),this.moduleStartTime=Date.now())}),Q(this,"stop",()=>{var B;(B=this.decoder)==null||B.release(),this.webglContext=void 0,this.decoderQueueLocked=!1}),Q(this,"reset",()=>{this.retries=0,this.restart()}),Q(this,"notifyWarningTextChanged",()=>{var B;(B=this.onWarningTextChanged)==null||B.call(this,this.getWarningText())}),Q(this,"restart",()=>{console.info("Restarting decoder"),console.info("BytestreamPlayer restarting",D(n({},this.trackInfo),{Restart:this.timesRestarted})),this.frameQueue=[],this.decoderQueue=[],this.stop(),this.decoder=new v(this.workerFactory(),this.onReceiveDecodedFrame,this.onDecoderError),this.start(),this.retries++,this.timesRestarted++}),Q(this,"onTrackTick",()=>{if(this.numFramesDecoded===0){if(this.lastDecodedFrameTime===void 0){const S=Date.now();console.info("BytestreamPlayer waiting for video",D(n({},this.trackInfo),{"Time Waited":S-this.moduleCreateTime}))}return}this.numFramesReceived/this.numFramesDecoded>$&&this.warnPerformanceProblems(),this.numFramesReceived=0,this.numFramesDecoded=0;const l=Array.from(this.frameCheckpointMap.entries()).reduce((S,[E,W])=>{var T;return!this.currentFrameIndex||E>this.currentFrameIndex-60||W==="FrameDrawn"||(S[W]=((T=S[W])!=null?T:0)+1,this.frameCheckpointMap.delete(E)),S},{});Object.keys(l).map(S=>{console.info("BytestreamPlayer Frame Dropped",D(n({},this.trackInfo),{"Num Dropped":l[S],"Frame State":S}))});const{minJitter:N,maxJitter:Z}=this;N&&Z&&(console.info("BytestreamPlayer Jitter",D(n({},this.trackInfo),{minJitter:N,maxJitter:Z})),this.minJitter=void 0,this.maxJitter=void 0)}),Q(this,"onTick",()=>{var B;const{lastReceivedFrameTime:l,lastDecodedFrameTime:N,moduleStartTime:Z,noSignal:S,retries:E}=this,W=new Date().getTime();S&&(this.lastNoSignalTime=W),this.overWaitingThreshold=W-Z>p;const T=W-Z>_;if(!N){l&&T&&E<b&&(this.waitingForDecoder=!0,this.restart());return}if(l){const a=W-l,C=W-N;W-this.lastNoSignalTime>p&&a<o&&C>o&&this.warnPerformanceProblems(),a>p&&(this.lostSignal=!0)}this.overWaitingThreshold&&(this.waitingForDecoder||this.noSignal||this.lostSignal)&&((B=this.onCanvasDrawerWarning)==null||B.call(this,"ShouldDisableControl"))}),Q(this,"receiveEncodedFrame",B=>{if(!B)return;const l=B.index;if(l&&this.frameCheckpointMap.set(l,"FrameReceived"),!(!B||!this.canvas||!this.webglContext)){if(this.isKeyframe(B),!this.hasReceivedKeyframe)return console.info("Dropping frame because no keyframe detected"),!1;this.lastReceivedFrameTime===void 0&&console.debug("Received first frame on bytestream player",n({},this.trackInfo)),this.checkOrder(B),this.numFramesReceived++,this.lastReceivedFrameTime=Date.now(),this.lostSignal&&this.restart(),this.noSignal=!1,this.lostSignal=!1,this.frameQueue.push(B),l&&this.frameCheckpointMap.set(l,"FrameQueued"),this.frameQueue.length>c&&(this.frameQueue=this.frameQueue.filter(N=>this.isKeyframe(N))),this.frameQueue.length>c&&(this.frameQueue=[],this.decoderQueue=[]),this.decodeNextFrame()}}),Q(this,"onDecoderError",B=>{this.frameQueue=[],this.decoderQueue=[],this.hasReceivedKeyframe=!1,console.info("BytestreamPlayer decode error",D(n({},this.trackInfo),{"Frame Index":B}))}),Q(this,"onReceiveDecodedFrame",B=>{var l,N;const{canvas:Z,yuvCanvas:S,decoderQueue:E}=this,{timestamp:W,yuv:T,height:a,width:C,index:M}=B;this.frameCheckpointMap.set(M,"FrameDecoded"),this.numFramesDecoded++;const e=Date.now();if(this.lastDecodedFrameTime===void 0&&console.info("BytestreamPlayer started video",D(n({},this.trackInfo),{"Time Until Video":e-this.moduleCreateTime})),this.lastDecodedFrameTime=e,this.waitingForDecoder=!1,this.decoderQueue=E.filter(h=>e-h<k.second*.5&&h!==W),!E.includes(W)||e-W>k.second||!S||!Z||a===0||C===0)return;a!==Z.height&&(Z.height=a,S.height=a),C!==Z.width&&(Z.width=C,S.width=C);const m=S.draw(T),X=Date.now();if(this.lastDrawnFrameTime){const h=X-this.lastDrawnFrameTime;this.minJitter=Math.min(h,(l=this.minJitter)!=null?l:Number.MAX_SAFE_INTEGER),this.maxJitter=Math.max(h,(N=this.maxJitter)!=null?N:0)}this.lastDrawnFrameTime=X,this.frameCheckpointMap.set(M,"FrameDrawn"),m===0&&(this.webglYUVSupported=!0),m===UU&&(this.webglYUVSupported=!1),this.frameQueue.length>0&&this.decodeNextFrame()}),this.workerFactory=U,this.onWebglYUVSupportedChanged=F,this.onWarningTextChanged=d,this.onCanvasDrawerWarning=R,this.trackInfo=J,this.decoder=new v(this.workerFactory(),this.onReceiveDecodedFrame,this.onDecoderError),setInterval(this.onTick,k.millisecond*200),setInterval(this.onTrackTick,k.second*5)}get waitingForDecoder(){return this._waitingForDecoder}set waitingForDecoder(U){this._waitingForDecoder=U,this.notifyWarningTextChanged()}get noSignal(){return this._noSignal}set noSignal(U){this._noSignal=U,this.notifyWarningTextChanged()}get lostSignal(){return this._lostSignal}set lostSignal(U){this._lostSignal=U,this.notifyWarningTextChanged()}get overWaitingThreshold(){return this._overWaitingThreshold}set overWaitingThreshold(U){this._overWaitingThreshold=U,this.notifyWarningTextChanged()}get retries(){return this._retries}set retries(U){this._retries=U,this.notifyWarningTextChanged()}get webglYUVSupported(){return this._webglYUVSupported}set webglYUVSupported(U){var F;this._webglYUVSupported=U,(F=this.onWebglYUVSupportedChanged)==null||F.call(this,U),this.notifyWarningTextChanged()}setCanvas(U){this.canvas=U}getWarningText(){var U;const{waitingForDecoder:F,noSignal:d,overWaitingThreshold:R,lostSignal:J,retries:B,webglYUVSupported:l}=this,N=l===!1,S=F?B===b?"Decoder failed to start":"Starting decoder":void 0,E=N?"Hardware decoding not supported on this device":void 0;return(U=E??(J?"Lost signal":d?R?"No signal":"Waiting for signal":void 0))!=null?U:S}decodeNextFrame(){if(this.decoderQueueLocked&&(this.decodeNextFrameAttempted=!0),this.decoderQueueLocked=!0,this.decoderQueue.length>c){this.decoderQueueLocked=!1,this.decodeNextFrameAttempted=!1;return}const U=this.frameQueue.shift();if(!U){this.decoderQueueLocked=!1,this.decodeNextFrameAttempted=!1;return}const F=Date.now();this.frameCheckpointMap.set(U.index,"FrameSentToDecoder"),this.decoder.post(F,U.frame_data,U.flags,U.index),this.decoderQueue.push(F),this.decoderQueueLocked=!1,this.decodeNextFrameAttempted&&(this.decodeNextFrameAttempted=!1,this.decodeNextFrame())}warnPerformanceProblems(){var U;this.lastDecodedFrameTime&&this.overWaitingThreshold&&!this.lostSignal&&!this.noSignal&&((U=this.onCanvasDrawerWarning)==null||U.call(this,"ShouldDegradeVideo"))}checkOrder(U){if(this.currentFrameIndex!==void 0&&U.index<this.currentFrameIndex){console.info("Out of order frame detected"),console.info("Frame out of order",n({},this.trackInfo));return}this.currentFrameIndex=U.index}isKeyframe(U){const{maxFrameSize:F,minFrameSize:d}=this;if(U.flags===3)return this.hasReceivedKeyframe||(this.frameCheckpointMap=new Map),this.hasReceivedKeyframe=!0,!0;const R=U.frame_data.length;return this.maxFrameSize=Math.max(R,F),this.minFrameSize=Math.min(R,d),this.medianFrameSize=(this.maxFrameSize+this.minFrameSize)/2,this.moduleStartTime+k.second*2>Date.now()?!1:R>this.medianFrameSize?(this.hasReceivedKeyframe=!0,!0):!1}}const O="",G=typeof window<"u"&&window.Blob&&new Blob([atob(O)],{type:"text/javascript;charset=utf-8"});function QU(){const V=G&&(window.URL||window.webkitURL).createObjectURL(G);try{return V?new Worker(V,{}):new Worker("data:application/javascript;base64,"+O,{type:"module"})}finally{V&&(window.URL||window.webkitURL).revokeObjectURL(V)}}class BU extends HTMLElement{constructor(){super(),H(this,"drawer"),this.drawer=new FU(()=>new QU,()=>{},()=>{})}connectedCallback(){this.style.background="black",this.innerHTML='<canvas style="height: 100%; width: 100%; object-fit: contain;"></canvas>',this.drawer.start(),this.drawer.setCanvas(this.querySelector("canvas"))}drawVideoFrame(U){this.drawer.receiveEncodedFrame(U)}}customElements.define("formant-realtime-player",BU);let x=!1;window.addEventListener("message",V=>{const U=RU("formant-realtime-player");x||(x=!0,U.drawer.start()),U.drawVideoFrame(JSON.parse(V.data))});function RU(V){return document.querySelector(V)}
